-> Arrays:
Uma array pode ser considerada uma lista de numeros, em que cada numero é guardado em uma
posicão da array representata por um indice que vai de 0 ate n-1.

int array[6] = {1, 2, 3, 5, 8, 13}
indices         0  1  2  3  4  5

Para ler ou escrever um valor em uma array temos que especificar sua posicão, quando queremos
fazer isso com a array completa nos usamos um laço de repetição.

int array[6];
int i;

for(i=0; i<6; i++){
    printf("%d ", array[i]);
}

-> Matrizes:
Uma tabela com linha(i) e colunas(i), em que cada posisão guardamos um valor especifico.

coluna                0   1   2   3     0   1   2   3     0   1   2   3
int matriz[3][4] = {{10, 20, 25, 30}, {35, 40, 45, 50}, {55, 60, 65, 70}}
linha               0                 1                  2

indices - [0][0]  [0][1]  [0][2]  [0][3]
          [1][0]  [1][1]  [1][2]  [1][3]
          [2][0]  [2][1]  [2][2]  [2][3]

Para ler ou escrever um valor em uma matriz temos que especificar sua posicão, quando queremos
fazer isso com a matriz completa nos usamos um laço de repetição.

int matriz[3][4];
int i, j;

for(i=0; i<3; i++){
    for(j=0; j<4; j++){
        printf("%d ", matriz[i][j]);
    }
    printf("\n");
}

DIAGONAIS 
O conceito de diagonais só funciona com matrizes quadradas.

diagonal principal      diagonal secundaria 
    | 1 0 0 |              | 0 0 1 |
    | 0 1 0 |      ou      | 0 1 0 |
    | 0 0 1 |              | 1 0 0 | 


MATRIZ IDENTIDADE
Os componetes da diagonal principal da matriz são iguais a 1 e os demais elementos são iguais a 0.

 | 1 0 0 | 
 | 0 1 0 |  
 | 0 0 1 |

MULTIPLICAÇÃO DE MATRIZES 
Para fazer uma multiplicação de matrizes, o valor do indice coluna da primeira matriz tem que 
ser igual ao indice da linha da segunda matriz. A matriz resultante vai ter o numero de linhas 
da primeira matriz e o numero de colunas da segunda matriz.

for(i=0; i<a; i++){
    for(j=0; j<b; j++){
        multiplicação_matriz[i][j] = 0;
        for(k=0; k<c; k++){
            multiplicação_matriz[i][i] += matriz1[i][k] * matriz2[k][j];
        }
    }
}